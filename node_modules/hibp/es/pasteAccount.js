import 'axios';
import './axiosInstance.js';
import './responses.js';
import fetchFromApi from './fetchFromApi.js';

/**
 * An object representing a paste.
 *
 * @typedef {object} Paste
 * @property {string} Id
 * @property {string} Source
 * @property {string} Title
 * @property {string} Date
 * @property {number} EmailCount
 */
/**
 * Fetches paste data for a specific account (email address).
 *
 * @param {string} email the email address to query
 * @param {object} [options] a configuration object
 * @param {string} [options.baseUrl] a custom base URL for the
 * haveibeenpwned.com API endpoints (default: `https://haveibeenpwned.com/api`)
 * @param {string} [options.userAgent] a custom string to send as the User-Agent
 * field in the request headers (default: `hibp <version>`)
 * @returns {(Promise<Paste[]> | Promise<null>)} a Promise which resolves to an
 * array of paste objects (or null if no pastes were found), or rejects with an
 * Error
 * @example
 * pasteAccount('foo@bar.com')
 *   .then(data => {
 *     if (data) {
 *       // ...
 *     } else {
 *       // ...
 *     }
 *   })
 *   .catch(err => {
 *     // ...
 *   });
 * @alias module:pasteAccount
 */
var pasteAccount = function pasteAccount(email) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return fetchFromApi("/pasteaccount/".concat(encodeURIComponent(email)), {
        baseUrl: options.baseUrl,
        userAgent: options.userAgent
    });
};

export default pasteAccount;
//# sourceMappingURL=pasteAccount.js.map
